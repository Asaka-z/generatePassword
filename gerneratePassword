/*
** randomWord 产生任意长度随机字母数字组合
** randomFlag 是否任意长度 min 任意长度最小位[固定位数] max 任意长度最大位
*/
export const randomPassword = (randomFlag, min, max) => {
    let result = '';
    let range = min;
    let arr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',
        'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L',
        'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'
    ];
    if (randomFlag) {
        range = Math.round(Math.random() * (max - min)) + min;// 任意长度
    }
    for (let i = 0; i < range; i++) {
        const pos = Math.round(Math.random() * (arr.length - 1));
        result += arr[pos];
    }
    if (result.match('.*[a-z]{1,}.*') && result.match('.*[A-Z]{1,}.*') && result.match('.*[0-9]{1,}.*')) {
        return result;
    }
    return randomPassword(randomFlag, min, max);
};

export const checkPassword = (password) => {
    if (password.length < 8 || password.length > 12) { return 0; }
    let ls = 0;
    if (password.match(/([a-z])+/)) { ls++; }
    if (password.match(/([0-9])+/)) { ls++; }
    if (password.match(/([A-Z])+/)) { ls++; }
    // if(password.match(/[^a-zA-Z0-9]+/)){ ls++;}
    return ls;
};
